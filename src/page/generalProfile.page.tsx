/**
 * @author Tim
 * @overview generated by ghoti-cli
 * @fileoverview Page set PageGhotiGeneralProfile
 */

import * as React from 'react';
import * as Component from '../component/import';
import * as Func from '../func/import';
import * as Lambda from '../lambda/import';

import Config from '../config/config';

import * as $ from "jquery";

export interface IProps {
    history: any
}

export interface IState {

}

class PageGhotiGeneralProfile extends React.Component<IProps, IState> {
    height: number = 0
    state = {
        data: [],
        currStage: "",

        Username: "",
        Password: "",
        Email: "",
        Firstname: "",
        Lastname: "",
        Phone: "",
        Authority: "",
        Background: "",
        TaskIds: [],
        UserCompany: "",
        UserScore: "",
        Location:[],

        Client: "",
        ClientAddress: "",
        CheckList: [],
        ClientIcon: "",
        ClientID: "",

        VendorID:"",
        VendorABC: "",
        VendorAddress: "",
        BusinessLic: "",
        BLEDate: "",
        Vendor: "",
        ContractorLic: "",
        CLEDate: "",
        EINorSSN: "",
        VendorEmail: "",
        GenInsurance: "",
        GIEDate: "",
        ICO: "",
        VendorIcon: "",
        LicensedServices: [],
        PerformedServices: [],
        VendorPhone: "",
        VendorContact: "",
        VendorRegion: "",
        WCInsurance: "",
        WCIEDate: "",
        VendorScore: ""




    }
    public constructor(props) {
        super(props);
        this.pushPage = this.pushPage.bind(this);
        this.showTable = this.showTable.bind(this);
        this.showList = this.showList.bind(this);
        this.changeStage = this.changeStage.bind(this);
        this.submit = this.submit.bind(this);
    }

    public render() {
        this.height = window.innerHeight * 0.65
        return (<div className="page">
            <Component.leftBar page="generalProfile" pushPage={this.pushPage.bind(this)} />
            <Component.topBar page="generalProfile" pushPage={this.pushPage.bind(this)} />
            <div className="content" style={{ display: "fixed" }}>
                <div style={{
                    color: "#283747",
                    fontWeight: "bold",
                    fontSize: "22px",
                    marginLeft: "15px",
                    marginTop: "5px"
                }}>Manage User/Company</div>
                <div className="mainTable">
                    <div className="card shadow mb-4">
                        <div className="card-header py-3">
                            <div className="controls col-md-2 " style={{
                                // marginTop: "15px",
                                // marginLeft: "15px",
                                // width: "20%",
                                // height:"10%",
                            }}>
                                <select className="form-control " id='user_type' onChange={e => { this.changeStage(e.target.value) }}>
                                    <option>Choose</option>
                                    <option value="0">User</option>
                                    <option value="1">Client</option>
                                    <option value="2">Vendor</option>
                                </select>
                            </div>
                            {this.showList()}

                        </div>
                        <div style={{ height: this.height, overflow: "auto" }} className="card-body">
                            {this.showTable()}
                        </div>
                    </div>
                </div>


            </div>
        </div>);
    }

    protected showList() {
        if (this.state.currStage === '0') {
            return (
                <React.Fragment>
                    <div className="controls col-md-2 " style={{
                        marginTop: "15px",
                        // marginLeft: "15px",
                        // width: "20%",
                        // height:"10%",
                    }}>
                        <select className="form-control " id='user_type' onChange={e => { this.findTarget(e.target.value) }}>
                            <option value="0">Choose User</option>
                            {this.state.data.map(function (each, index) {
                                return (
                                    <option key={index}>{each.Username}</option>
                                )

                            })}
                        </select>
                    </div>
                </React.Fragment>
            )
        }
        else if (this.state.currStage === '1') {
            return (
                <React.Fragment>
                    <div className="controls col-md-2 " style={{
                        marginTop: "15px",
                        // marginLeft: "15px",
                        // width: "20%",
                        // height:"10%",
                    }}>
                        <select className="form-control " id='user_type' onChange={e => { this.findTarget(e.target.value) }}>
                            <option value="0">Choose Client</option>
                            {this.state.data.map(function (each, index) {
                                return (
                                    <option key={index}>{each.Company}</option>
                                )

                            })}
                        </select>
                    </div>
                </React.Fragment>
            )
        }
        else if (this.state.currStage === '2') {
            return (
                <React.Fragment>
                    <div className="controls col-md-2 " style={{
                        marginTop: "15px",
                        // marginLeft: "15px",
                        // width: "20%",
                        // height:"10%",
                    }}>
                        <select className="form-control " id='user_type' onChange={e => { this.findTarget(e.target.value) }}>
                            <option value="0">Choose Vendor</option>
                            {this.state.data.map(function (each, index) {
                                return (
                                    <option key={index} value={each.ID}>{each.Company}</option>
                                )

                            })}
                        </select>
                    </div>
                </React.Fragment>
            )
        }
        else {
            return (
                <div></div>
            )
        }
    }

    protected findTarget(name: string) {
        if (name === '0') {
            return void 0;
        }
        if (this.state.currStage === '0') {
            $.ajax({
                url: 'https://rpntechserver.appspot.com/findUserByUsername?username=' + name,
                headers: {
                    Authorization: "Bearer " + localStorage.getItem('Token'),
                },
                method: 'GET',
                datatype: "json",
                data: JSON.stringify({
                }),
                success: (function (result) {
                    console.log(result);
                    this.setState({ Username: result.Username });
                    this.setState({ Password: result.Password });
                    this.setState({ Email: result.Email });
                    this.setState({ Firstname: result.Firstname });
                    this.setState({ Lastname: result.Lastname });
                    this.setState({ Phone: result.Phone });
                    this.setState({ Authority: result.Authority });
                    this.setState({ Background: result.abc_num });
                    this.setState({ TaskIds: result.TaskIds });
                    this.setState({
                        UserCompany: result.company,
                        UserScore: result.score,
                        Location: result.locations
                    })
                }).bind(this),
            })
        }
        else if (this.state.currStage === '1') {
            $.ajax({
                url: 'https://rpntechserver.appspot.com/findClientByCompanyName?company=' + name,
                headers: {
                    Authorization: "Bearer " + localStorage.getItem('Token'),
                },
                method: 'GET',
                datatype: "json",
                data: JSON.stringify({
                }),
                success: (function (result) {
                    console.log(result);
                    this.setState({ Client: result.Company });
                    this.setState({ ClientAddress: result.address });
                    this.setState({ CheckList: result.check_list });
                    this.setState({ ClientIcon: result.icon });
                    this.setState({ ClientID: result.ID })
                }).bind(this),
            })
        }
        else if (this.state.currStage === '2') {
            $.ajax({
                url: 'https://rpntechserver.appspot.com/findVendorById?vendorId=' + name,
                headers: {
                    Authorization: "Bearer " + localStorage.getItem('Token'),
                },
                method: 'GET',
                datatype: "json",
                data: JSON.stringify({
                }),
                success: (function (result) {
                    console.log(result);
                    let region = ""
                    for (let i = 0; i < result.Region.length; i++) {
                        region += result.Region[i].state;
                        region += '-'
                        region += result.Region[i].county;
                        region += '\n'
                    }
                    this.setState({
                        VendorABC: result.ABCNum,
                        VendorAddress: result.Address,
                        BusinessLic: result.BusinessLic,
                        BLEDate: result.BusinessLicExpireDate,
                        Vendor: result.Company,
                        ContractorLic: result.ContractorLic,
                        CLEDate: result.ContractorLicExpireDate,
                        EINorSSN: result.EINorSSN,
                        VendorEmail: result.Email,
                        GenInsurance: result.GenInsurance,
                        GIEDate: result.GenInsuranceExpireDate,
                        ICO: result.ICOLevel,
                        VendorIcon: result.Icon,
                        LicensedServices: result.LicensedServices,
                        PerformedServices: result.PerformedServices,
                        VendorPhone: result.Phone,
                        VendorContact: result.PrimaryContact,
                        VendorRegion: region,
                        WCInsurance: result.WCInsurance,
                        WCIEDate: result.WCInsuranceExpireDate,
                        VendorScore: result.Score,
                        VendorID:result.ID
                    })

                }).bind(this),
            })
        }
        else {
            return void 0;
        }
    }

    protected changeStage(stage: any) {
        if (stage === '0') {
            $.ajax({
                url: 'https://rpntechserver.appspot.com/findAllUsers',

                headers: {
                    Authorization: "Bearer " + localStorage.getItem('Token'),
                },
                method: 'GET',
                datatype: "json",
                data: JSON.stringify({
                }),
                success: (function (result) {
                    // console.log(result);
                    this.setState({ data: result });
                    this.setState({ currStage: stage })
                }).bind(this),
            });
        }
        else if (stage === '1') {
            $.ajax({
                url: "https://rpntechserver.appspot.com/findAllClient",
                headers: {
                    Authorization: "Bearer " + localStorage.getItem('Token'),
                },
                method: 'GET',
                datatype: "json",
                data: JSON.stringify({
                }),
                success: (function (result) {
                    // console.log(result);
                    this.setState({ data: result });
                    this.setState({ currStage: stage })
                }).bind(this),
            });
        }
        else if (stage === '2') {
            $.ajax({
                url: "https://rpntechserver.appspot.com/findAllVendors",
                headers: {
                    Authorization: "Bearer " + localStorage.getItem('Token'),
                },
                method: 'GET',
                datatype: "json",
                data: JSON.stringify({
                }),
                success: (function (result) {
                    // console.log(result);
                    this.setState({ data: result });
                    this.setState({ currStage: stage })
                }).bind(this),
            });
        }
        else {

        }
        this.setState({ currStage: stage })
    }



    protected showTable() {
        if (this.state.currStage === '0') {
            return (
                <React.Fragment>

                    <div id="signupbox" style={{ marginTop: "15px",float:"left" }} className="mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <div className="panel panel-info">
                            <form className="form-horizontal" method="post">
                                <div id="div_id_propertyaddress" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> Username<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-8 ">
                                        <input className="input-md  textinput textInput form-control" value={this.state.Username} id="username" name="username" placeholder="Username..." style={{ marginBottom: "5px" }} type="text" readOnly></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> Password<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-8 ">
                                        <input className="input-md  textinput textInput form-control" value={this.state.Password} onChange={e => { this.setState({ Password: e.target.value }) }} id="password" name="password" placeholder="Password..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_client" className="form-group required">
                                    <label className="control-label col-md-4  requiredField">Authority<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-8 ">
                                        <input className="input-md  textinput textInput form-control" value={this.state.Authority} id="authority" name="authority" style={{ marginBottom: "5px" }} type="text" readOnly></input>
                                    </div>
                                </div>
                                <div id="div_id_city" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> Firstname<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-8 ">
                                        <input className="input-md  textinput textInput form-control" value={this.state.Firstname} onChange={e => { this.setState({ Firstname: e.target.value }) }} id="firstname" name="firstname" placeholder="Firstname..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_city" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> Lastname<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-8 ">
                                        <input className="input-md  textinput textInput form-control" value={this.state.Lastname} onChange={e => { this.setState({ Lastname: e.target.value }) }} id="lastname" name="lastname" placeholder="Lastname..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_city" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> Email<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-8 ">
                                        <input className="input-md  textinput textInput form-control" value={this.state.Email} onChange={e => { this.setState({ Email: e.target.value }) }} id="email" name="email" placeholder="Email..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_city" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> Phone<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-8 ">
                                        <input className="input-md  textinput textInput form-control" value={this.state.Phone} onChange={e => { this.setState({ Phone: e.target.value }) }} id="phone" name="phone" placeholder="Phone..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_city" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> Company<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-8 ">
                                        <input className="input-md  textinput textInput form-control" value={this.state.UserCompany} onChange={e => { this.setState({ UserCompany: e.target.value }) }} id="phone" name="phone" placeholder="Company..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_city" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> ABC Number<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-8 ">
                                        <input className="input-md  textinput textInput form-control" value={this.state.Background} id="background" name="background" placeholder="Background..." style={{ marginBottom: "5px" }} type="text" readOnly></input>
                                    </div>
                                </div>
                                <div id="div_id_city" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> Score<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-8 ">
                                        <input className="input-md  textinput textInput form-control" value={this.state.UserScore} onChange={e => { this.setState({ UserScore: e.target.value }) }} id="background" name="background" placeholder="Score..." style={{ marginBottom: "5px" }} type="text"></input>
                                    </div>
                                </div>


                            </form>
                            <button id="submit" type="submit" name="submit" style={{ marginBottom: "10px" }} className="btn btn-primary  col-md-8" onClick={this.submit} value="submit">Submit</button>
                        </div> </div>
                        <div id="signupbox" style={{ marginTop: "15px",float:"right" }} className="mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <div className="panel panel-info">
                            <label>Location:</label>
                            {this.state.Location?this.state.Location.map(function(value,index){
                                let temp = value.split(" ");
                                console.log(temp.indexOf("enter"))
                                console.log(value.split(" "))
                                return(
                                    <li>{value}</li>
                                )
                            }.bind(this)):void 0}
                        </div> </div>
                </React.Fragment>
            )
        }
        else if (this.state.currStage === '1') {
            return (
                <React.Fragment>
                    <div id="signupbox" style={{ marginTop: "15px", float: "left" }} className="mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <div className="panel panel-info">
                            <form className="form-horizontal" method="post">
                                <div id="div_id_propertyaddress" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> Company<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-8 ">
                                        <input className="input-md  textinput textInput form-control" value={this.state.Client} id="company" name="company" placeholder="Company..." style={{ marginBottom: "5px" }} type="text" readOnly></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> Address<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-8 ">
                                        <input className="input-md  textinput textInput form-control" value={this.state.ClientAddress} onChange={e => { this.setState({ address: e.target.value }) }} id="address" name="address" placeholder="Address..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> Icon<span className="asteriskField"></span> </label>
                                    <div style={{
                                        width: "60%",
                                        marginLeft: "15px"
                                    }} className="input-group-prepend input-group-sm">
                                        <span className="input-group-text">{this.state.VendorIcon ? <img style={{ width: "25px", height: "25px" }} src={this.state.ClientIcon} /> : <div></div>}</span>
                                        <div className="custom-file">
                                            <input type="file" className="custom-file-input" id="inputGroupFile01" aria-describedby="inputGroupFileAddon01"
                                                onChange={(e) => { this.addIcon(e.target.files) }}></input>
                                            <label className="custom-file-label" >Upload Icon</label>
                                        </div>
                                    </div>
                                </div>
                            </form>
                            <button id="submit" type="submit" name="submit" style={{ marginBottom: "10px" }} className="btn btn-primary  col-md-8" onClick={this.submit} value="submit">Submit</button>
                        </div> </div>
                    <div id="signupbox" style={{ marginTop: "15px", float: "right" }} className="mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <div className="panel panel-info" >
                            {this.state.CheckList.length == 0 ? <div>None</div> : this.state.CheckList.map(this.mapCategory)}
                            <button style={{ marginTop: "10px" }} className="btn btn-primary  col-md-8" onClick={this.addCategory} >AddCategory</button>
                        </div>
                    </div>
                </React.Fragment>
            )
        }
        else if (this.state.currStage === '2') {
            return (
                <React.Fragment>
                    <div id="signupbox" style={{ marginTop: "5px", float: "left", width: "47%", borderRight: "1px solid #E5E5E5" }} className="mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <div className="panel panel-info" >
                            <form className="form-horizontal" method="post" >
                                <div id="div_id_propertyaddress" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> Company<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.Vendor} className="input-md  textinput textInput form-control" onChange={e => this.setState({ Vendor: e.target.value })} id="Vendor" name="Vendor" placeholder="Company..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> Address<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.VendorAddress} onChange={e => this.setState({ VendorAddress: e.target.value })} className="input-md  textinput textInput form-control" id="VendorAddress" name="VendorAddress" placeholder="Address..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> Primary Contact<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.VendorContact} onChange={e => this.setState({ VendorContact: e.target.value })} className="input-md  textinput textInput form-control" id="VendorUser" name="vendoraddress" placeholder="Contact..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> Phone<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.VendorPhone} onChange={e => this.setState({ VendorPhone: e.target.value })} className="input-md  textinput textInput form-control" id="VendorPhone" name="VendorPhone" placeholder="Phone..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> Email<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10">
                                        <input value={this.state.VendorEmail} onChange={e => this.setState({ VendorEmail: e.target.value })} className="input-md  textinput textInput form-control" id="VendorEmail" name="VendorEmail" placeholder="Eamil..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> EIN/SSN<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.EINorSSN} onChange={e => this.setState({ EINorSSN: e.target.value })} className="input-md  textinput textInput form-control" id="EINorSSN" name="EINorSSN" placeholder="EIN/SSN..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> General Liability Insurance<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.GenInsurance} onChange={e => this.setState({ GenInsurance: e.target.value })} className="input-md  textinput textInput form-control" id="GLInsurance" name="Insurance" placeholder="General Liability Insurance..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> General Liability Insurance Expire Date<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.GIEDate} onChange={e => this.setState({ GIEDate: e.target.value })} type="date" className="input-md  textinput textInput form-control" id="GLIEDate" name="IEDate" style={{ marginBottom: "5px" }}></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> Work Comp Insurance<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.WCInsurance} onChange={e => this.setState({ WCInsurance: e.target.value })} className="input-md  textinput textInput form-control" id="WCInsurance" name="Insurance" placeholder="General Liability Insurance..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> Work Comp Insurance Expire Date<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.WCIEDate} onChange={e => this.setState({ WCIEDate: e.target.value })} type="date" className="input-md  textinput textInput form-control" id="WCIEDate" name="IEDate" style={{ marginBottom: "5px" }}></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> Business License<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.BusinessLic} onChange={e => this.setState({ BusinessLic: e.target.value })} className="input-md  textinput textInput form-control" id="BLicense" name="Insurance" placeholder="Business License..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> Business License Expire Date<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.BLEDate} onChange={e => this.setState({ BLEDate: e.target.value })} type="date" className="input-md  textinput textInput form-control" id="BLEDate" name="IEDate" style={{ marginBottom: "5px" }}></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8 requiredField"> Contractor License<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.ContractorLic} onChange={e => this.setState({ ContractorLic: e.target.value })} className="input-md  textinput textInput form-control" id="CLicense" name="Insurance" placeholder="Contractor License..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> Contractor License Expire Date<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.CLEDate} onChange={e => this.setState({ CLEDate: e.target.value })} type="date" className="input-md  textinput textInput form-control" id="CLEDate" name="IEDate" style={{ marginBottom: "5px" }}></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> ABCNumber<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.VendorABC} onChange={e => this.setState({ VendorABC: e.target.value })} className="input-md  textinput textInput form-control" id="ABCNumber" name="ABCNumber" placeholder="ABCNumber..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>
                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-8  requiredField"> ICOLevel<span className="asteriskField"></span> </label>
                                    <div className="controls col-md-10 ">
                                        <input value={this.state.ICO} onChange={e => this.setState({ ICO: e.target.value })} className="input-md  textinput textInput form-control" id="ICOLevel" name="ICOLevel" placeholder="ICOLevel..." style={{ marginBottom: "5px" }} type="text" ></input>
                                    </div>
                                </div>

                                <div id="div_id_assetnumber" className="form-group required">
                                    <label className="control-label col-md-4  requiredField"> Icon<span className="asteriskField"></span> </label>
                                    <div style={{
                                        width: "60%",
                                        marginLeft: "15px"
                                    }} className="input-group-prepend input-group-sm">
                                        <span className="input-group-text">{this.state.VendorIcon ? <img style={{ width: "25px", height: "25px" }} src={this.state.VendorIcon} /> : <div></div>}</span>
                                        <div className="custom-file">
                                            <input type="file" className="custom-file-input" id="inputGroupFile01" aria-describedby="inputGroupFileAddon01"
                                                onChange={(e) => { this.addIcon(e.target.files) }}></input>
                                            <label className="custom-file-label" >Upload Icon</label>
                                        </div>
                                    </div>
                                </div>
                            </form>
                            <button id="submit" type="submit" name="submit" style={{ marginLeft: "15px" }} className="btn btn-primary  col-md-9" onClick={this.submit} value="submit">Submit</button>
                        </div>
                    </div>
                    <div id="signupbox" style={{ marginTop: "15px", width: "47%", float: "right" }} className="mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <div id="div_id_assetnumber" className="form-group required">
                            <label className="control-label col-md-4  requiredField"> Performed Services<span className="asteriskField"></span> </label>
                            {this.state.PerformedServices.map(function (item, index) {
                                // console.log(item.includes('-'))
                                if (item.includes('-') == true) {
                                    let temp = item.split('-');
                                    return (
                                        <div key={index} style={{ marginLeft: "15px" }} className="form-check">
                                            <input style={{ marginTop: "7px" }} className="form-check-input" type="checkbox" id={temp[1]} />
                                            <label className="form-check-label">
                                                {temp[1]}
                                            </label>
                                        </div>
                                    )
                                }
                                else {
                                    return (
                                        <div key={index}style={{ marginLeft: "15px" }} className="form-check">
                                            <input defaultChecked style={{ marginTop: "7px" }} className="form-check-input" type="checkbox" id={item} />
                                            <label className="form-check-label">
                                                {item}
                                            </label>
                                        </div>
                                    )
                                }
                            }.bind(this))}

                        </div>
                        <div id="div_id_assetnumber" className="form-group required">
                        <label className="control-label col-md-4  requiredField"> Licensed Services<span className="asteriskField"></span> </label>
                            {this.state.LicensedServices.map(function (item, index) {
                                if (item.includes('-') == true) {
                                    let temp = item.split('-');
                                    return (
                                        <div key={index} style={{ marginLeft: "15px" }} className="form-check">
                                            <input style={{ marginTop: "7px" }} className="form-check-input" type="checkbox" id={temp[1]} />
                                            <label className="form-check-label">
                                                {temp[1]}
                                            </label>
                                        </div>
                                    )
                                }
                                else {
                                    return (
                                        <div style={{ marginLeft: "15px" }} className="form-check">
                                            <input defaultChecked style={{ marginTop: "7px" }} className="form-check-input" type="checkbox" id={item} />
                                            <label className="form-check-label">
                                                {item}
                                            </label>
                                        </div>
                                    )
                                }
                            }.bind(this))}
                        </div>
                        <div id="div_id_assetnumber" className="form-group required">
                            <div className="form-group">
                                <label >Cover State (Format: State-County) (Use line break to separate State-County) </label>
                                <textarea value={this.state.VendorRegion} onChange={e => this.setState({ VendorRegion: e.target.value })} id="CoverState" style={{ width: "70%", height: "150px" }}>

                                </textarea>
                            </div>
                        </div>
                    </div>
                </React.Fragment>
            )
        }
        else {
            return void 0
        }
    }

    protected addIcon(File: FileList) {
        var formData = new FormData();
        formData.append('image', File[0]);
        $.ajax({
            url: 'https://rpntechserver.appspot.com/uploadImage',
            method: 'POST',
            enctype: 'multipart/form-data',
            dataType: 'json',
            fileElementId: 'file-input',
            cache: false,
            processData: false,
            contentType: false,
            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            data: formData,
            success: function (result) {
                if (this.state.currStage === "1") {
                    this.setState({ ClientIcon: result });
                }
                else {
                    this.setState({ VendorIcon: result });
                }

            }.bind(this),
        });
    }

    protected addCategory() {
        let list = this.state.CheckList;
        list.push(this.initCategory());
        this.setState({ check_list: list });
    }

    protected initCategory() {
        return {
            Category: "",
            questions: [],
        }
    }



    protected mapCategory(item, key) {
        return (
            <React.Fragment key={key}>
                <button style={{ marginBottom: "10px" }} className="btn btn-primary  col-md-8" onClick={() => {
                    let list = this.state.CheckList;
                    list.splice(key, 0, this.initCategory());
                    this.setState({ check_list: list });
                }} >AddCategory</button>
                <div className="card-header col-md-8">

                    <div className="input-group-prepend input-group-sm" style={{ marginBottom: "0px" }}>
                        <button style={{}} className="btn btn-danger center" onClick={() => {
                            let list = this.state.CheckList;
                            list.splice(key, 1);
                            this.setState({ check_list: list });
                        }}></button>
                        <span className="input-group-text" id="basic-addon1" style={{
                            color: "black",
                            height: "31px"
                            // fontSize:'13px'
                        }}>Category</span>

                        <input type="text" className="form-control" placeholder="Category..." aria-label="Category" aria-describedby="basic-addon1"
                            id='cate' value={item.Category}
                            style={{
                                color: "black",
                                // width:"99%"
                            }}
                            onChange={e => {
                                let list = this.state.CheckList;
                                list[key].Category = e.target.value;
                                this.setState({ check_list: list });
                            }}
                        ></input>
                    </div>
                    <div className="card-body">
                        {item.questions.map(function (ques, index) {
                            return (
                                <React.Fragment key={index}>
                                    <button style={{ marginBottom: "10px" }} className="btn btn-info col-md-12 " onClick={() => {
                                        let list = this.state.check_list;
                                        list[key].questions.splice(index, 0, "");
                                        // console.log(list[key].Questions);
                                        this.setState({ check_list: list });
                                    }} >AddQuestions</button>
                                    <div className="input-group-prepend input-group-sm" style={{ marginBottom: "0px" }}>
                                        <button style={{}} className="btn btn-danger center" onClick={() => {
                                            let list = this.state.check_list;
                                            list[key].questions.splice(index, 1);
                                            this.setState({ check_list: list });
                                        }}></button>
                                        <span className="input-group-text" id="basic-addon1" style={{
                                            color: "black",
                                            height: "100px"
                                            // fontSize:'13px'
                                        }}>Question{index + 1}</span>
                                        <textarea className="form-control" placeholder="Question..." aria-label="DescriptionCN" aria-describedby="basic-addon1"
                                            id='descriptionCN' value={ques}
                                            onChange={e => {
                                                let list = this.state.check_list;
                                                list[key].questions[index] = e.target.value;
                                                this.setState({ check_list: list });
                                            }}
                                            style={{
                                                // width: "425px",
                                                height: "100px",
                                                resize: "none"
                                            }}>
                                            ></textarea>
                                    </div>
                                </React.Fragment>
                            )
                        }.bind(this))}
                        <div>
                            <button style={{ marginTop: "10px" }} className="btn btn-info col-md-12" onClick={() => {
                                let list = this.state.CheckList;
                                list[key].questions.push("");
                                this.setState({ check_list: list });
                            }} >AddQuestions</button>
                        </div>
                    </div>
                </div>
            </React.Fragment>
        )
    }

    protected pushPage(page: String) {
        this.props.history.push(page)
    }

    protected submit() {
        if (this.state.currStage === '0') {
            $.ajax({
                url: 'https://rpntechserver.appspot.com/updateUser',
                headers: {
                    Authorization: "Bearer " + localStorage.getItem('Token'),
                },
                method: 'POST',
                datatype: "json",
                data: JSON.stringify({
                    Username: this.state.Username,
                    Password: this.state.Password,
                    Authority: this.state.Authority,
                    Email: this.state.Email,
                    Phone: this.state.Phone,
                    Firstname: this.state.Firstname,
                    Lastname: this.state.Lastname,
                    abc_num: this.state.Background,
                    TaskIds: this.state.TaskIds,
                    company: this.state.UserCompany,
                    score: this.state.UserScore,
                    locations: this.state.Location
                }),
                success: (function (result) {
                    this.props.history.push("/main");
                }).bind(this),
            });
        }
        else if (this.state.currStage === '1') {
            $.ajax({
                url: 'https://rpntechserver.appspot.com/updateUser',
                headers: {
                    Authorization: "Bearer " + localStorage.getItem('Token'),
                },
                method: 'POST',
                datatype: "json",
                data: JSON.stringify({
                    Username: this.state.Username,
                    Password: this.state.Password,
                    Authority: this.state.Authority,
                    Email: this.state.Email,
                    Phone: this.state.Phone,
                    Firstname: this.state.Firstname,
                    Lastname: this.state.Lastname,
                    abc_num: this.state.Background,
                    TaskIds: this.state.TaskIds,
                    company: this.state.UserCompany,
                    score: this.state.UserScore,
                }),
                success: (function (result) {
                    this.props.history.push("/main");
                }).bind(this),
            });
        }
        else if (this.state.currStage === '2') {
            let PerformedServices = [];
            $('#PropertyInspection').prop("checked") ? PerformedServices.push("PropertyInspection") : PerformedServices.push("False-PropertyInspection")
            $('#PropertyPreservation').prop("checked") ? PerformedServices.push("PropertyPreservation") : PerformedServices.push("False-PropertyPreservation")
            $('#REO').prop("checked") ? PerformedServices.push("REO") : PerformedServices.push("False-REO")
            $('#HazardClaim').prop("checked") ? PerformedServices.push("HazardClaim") : PerformedServices.push("False-HazardClaim")
            $('#QualityControl').prop("checked") ? PerformedServices.push("QualityControl") : PerformedServices.push("False-QualityControl")

            let LicensedServices = [];
            $('#MoldRemediation').prop("checked") ? LicensedServices.push("MoldRemediation") : LicensedServices.push("False-MoldRemediation")
            $('#Electrical').prop("checked") ? LicensedServices.push("Electrical") : LicensedServices.push("False-Electrical")
            $('#Demolition').prop("checked") ? LicensedServices.push("Demolition") : LicensedServices.push("False-Demolition")
            $('#Plumbing').prop("checked") ? LicensedServices.push("Plumbing") : LicensedServices.push("False-Plumbing")
            $('#HealthHazard').prop("checked") ? LicensedServices.push("HealthHazard") : LicensedServices.push("False-HealthHazard")
            $('#Roofing').prop("checked") ? LicensedServices.push("Roofing") : LicensedServices.push("False-Roofing")
            $('#GeneralContracting').prop("checked") ? LicensedServices.push("GeneralContracting") : LicensedServices.push("False-GeneralContracting")
            let temp = this.state.VendorRegion
            let CoverState = temp.split("\n")
            // console.log(CoverState);
            let StateCounty = [];
            for (let i = 0; i < CoverState.length; i++) {
                if (CoverState[i]) {
                    let State = CoverState[i].split("-")[0];
                    let County = CoverState[i].split("-")[1];
                    State = State.replace(" ", "")
                    County = County.replace(" ", "_")
                    StateCounty.push({ state: State, county: County })
                }
            }
            // console.log(StateCounty);
            $.ajax({
                url: 'https://rpntechserver.appspot.com/updateVendor?vendorId='+this.state.VendorID,
                method: 'POST',
                datatype: "json",
                headers: {
                    Authorization: "Bearer " + localStorage.getItem('Token'),
                },
                data: JSON.stringify({
                    Company: this.state.Vendor,
                    Address: this.state.VendorAddress,
                    icon: this.state.VendorIcon,
                    Region: StateCounty,
                    PrimaryContact: this.state.VendorContact,
                    Phone: this.state.VendorPhone,
                    Email: this.state.VendorEmail,
                    EINorSSN: this.state.EINorSSN,
                    BusinessLic: this.state.BusinessLic,
                    BusinessLicExpireDate: this.state.BLEDate,
                    ContractorLic: this.state.ContractorLic,
                    ContractorLicExpireDate: this.state.CLEDate,
                    GenInsurance: this.state.GenInsurance,
                    GenInsuranceExpireDate: this.state.GIEDate,
                    WCInsurance: this.state.WCInsurance,
                    WCInsuranceExpireDate: this.state.WCIEDate,
                    PerformedServices: PerformedServices,
                    LicensedServices: LicensedServices,
                    ABCNum: this.state.VendorABC,
                    ICOLevel: this.state.ICO,
                    Score: "0"
                }),
                success: function (data) {
                    console.log(data);
                    this.props.history.push('/main');
                }.bind(this),
            });
        }
        else {

        }
    }
}

export default PageGhotiGeneralProfile;

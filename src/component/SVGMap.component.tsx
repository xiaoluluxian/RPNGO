/**
 * @author Tim
 * @overview generated by ghoti-cli
 * @fileoverview Component set ComponentGhotiSVGMap
 */

import * as React from 'react';
import * as Func from '../func/import';
import * as Lambda from '../lambda/import';

import Config from '../config/config';

export interface IProps {
    map:any,
    className?:any,
    role?:any,
    ariaLabel?:string,
    onLocationClick:any
    onLocationMouseOver: any
}

export interface IState {

}

class ComponentGhotiSVGMap extends React.Component<IProps, IState> {
    public constructor(props) {
        super(props);
    }

    public render() {
        return (<div>
            <svg
			xmlns="http://www.w3.org/2000/svg"
			viewBox={this.props.map.viewBox}
			// className={this.props.className}
			// role={this.props.role}
			aria-label={this.props.map.label}
			style={{
				stroke:"#666",
				strokeWidth:"1"
			}}
		>
			{this.props.map.locations.map((location, index) => {
				return (
					<path
					className="path"
						id={location.id}
						name={location.name}
						d={location.path}
						// className={typeof props.locationClassName === 'function' ? props.locationClassName(location, index) : props.locationClassName}
						// tabIndex={typeof props.locationTabIndex === 'function' ? props.locationTabIndex(location, index) : props.locationTabIndex}
						// role={props.locationRole}
						// aria-label={location.name}
						// aria-checked={props.isLocationSelected && props.isLocationSelected(location, index)}
						// onMouseOver={props.onLocationMouseOver}
						// onMouseOut={props.onLocationMouseOut}
						// onMouseMove={props.onLocationMouseMove}
						onClick={this.props.onLocationClick}
						onMouseOver={this.props.onLocationMouseOver}
						// onKeyDown={props.onLocationKeyDown}
						// onFocus={props.onLocationFocus}
						// onBlur={props.onLocationBlur}
						key={location.id}
					/>
				);
			})}
		</svg>
        </div>);
    }
}

export default ComponentGhotiSVGMap;
